{"componentChunkName":"component---src-templates-talk-page-js","path":"/program/talks/type-annotations-in-python-terribly-intimidating-or-tremendously-informative","result":{"data":{"talksYaml":{"title":"Type Annotations in Python: Terribly Intimidating or Tremendously Informative?","description":"<p>Many software developers have written a Python program without explicitly declaring the types of the parameters for a function's parameters or return values. Since the Python programming language now supports type annotations, many people in the community are exploring this way to describe the data that a function accepts as input and produces as output. When you start to apply Python's type annotations, their syntax and meaning can be confusing and it is common to wonder whether or not there is any benefit to adding them at all!</p>\n<p>This presentation will introduce Python's type annotations by iteratively applying them to a function that does not have explicit types. After explaining how to use the types available in the <code>typing</code> package, this talk will illustrate the ways in which a static type checker like <code>mypy</code> can find bugs in a Python program before it is executed. People who watch this talk will gain the knowledge they need to start writing their first type annotations, use them to improve their Python programs, and ultimately find them to be beneficial.</p>","type":"Thunder Talk","start_time":"2021-07-31T11:35:00-04:00","youtube_url":"https://youtu.be/gT2PzTSkT1o","content_warnings":null,"speakers":[{"name":"Gregory M. Kapfhammer","slug":"gregory-m-kapfhammer"}]}},"pageContext":{"id":"14ff3609-0a98-5d8b-b4ab-1063fbb018ca"}},"staticQueryHashes":["2197803311","2744905544","3465997491","479044330","512359922"]}