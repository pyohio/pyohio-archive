{"version":3,"sources":["webpack://pyohio-static-website/./src/templates/speaker-page.js"],"names":["TalkPage","speaker","data","speakersYaml","talks","map","t","as","Link","to","slug","title","reduce","prev","curr","name","GatsbyImage","sx","borderRadius","border","borderColor","WebkitMaskImage","image","getImage","localImage","childImageSharp","twitter","href","dangerouslySetInnerHTML","__html","biography"],"mappings":"8OAQe,SAASA,EAAT,GAA6B,IACpCC,EADmC,EAARC,KACZC,aACfC,EAAQH,EAAQG,MACnBC,KAAI,SAACC,GAAD,OACH,QAAC,OAAD,CAAUC,GAAIC,OAAMC,GAAE,kBAAoBH,EAAEI,MACzCJ,EAAEK,UAGNC,QAAO,SAACC,EAAMC,GAAP,MAAgB,CAACD,EAAM,KAAMC,MAEvC,OACE,QAAC,KAAD,MACE,QAAC,KAAD,CAAKH,MAAK,wBAA0BV,EAAQc,QAC5C,QAAC,KAAD,MACE,kBAAKd,EAAQc,OACb,QAAC,SAAD,CACER,GAAIS,IACJC,GAAI,CACFC,aAAc,OACdC,OAAQ,YACRC,YAAa,YACbC,gBAAiB,yCAEnBC,OAAOC,OAAStB,EAAQuB,WAAWC,mBAGpCxB,EAAQyB,UACP,kBACE,aAAGC,KAAI,2BAA6B1B,EAAQyB,UAC1C,QAAC,MAAD,MADF,IACiBzB,EAAQyB,WAI7B,eAAKE,wBAAyB,CAAEC,OAAQ5B,EAAQ6B,cAChD,iCACA,iBAAI1B","file":"component---src-templates-speaker-page-js-53b198dac5a2ffe09415.js","sourcesContent":["/** @jsx jsx */\n\nimport { Layout, Seo } from \"gatsby-theme-catalyst-core\"\nimport { graphql, Link } from \"gatsby\"\nimport { jsx, BaseStyles, Themed } from \"theme-ui\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport { FaTwitter } from \"react-icons/fa\"\n\nexport default function TalkPage({ data }) {\n  const speaker = data.speakersYaml\n  const talks = speaker.talks\n    .map((t) => (\n      <Themed.a as={Link} to={`/program/talks/${t.slug}`}>\n        {t.title}\n      </Themed.a>\n    ))\n    .reduce((prev, curr) => [prev, \", \", curr])\n\n  return (\n    <Layout>\n      <Seo title={`PyOhio 2021 Speaker: ${speaker.name}`} />\n      <BaseStyles>\n        <h1>{speaker.name}</h1>\n        <Themed.img\n          as={GatsbyImage}\n          sx={{\n            borderRadius: \"35px\",\n            border: \"7px solid\",\n            borderColor: \"highlight\",\n            WebkitMaskImage: \"-webkit-radial-gradient(white, black)\",\n          }}\n          image={getImage(speaker.localImage.childImageSharp)}\n        />\n\n        {speaker.twitter && (\n          <p>\n            <a href={`https://www.twitter.com/${speaker.twitter}`}>\n              <FaTwitter /> {speaker.twitter}\n            </a>\n          </p>\n        )}\n        <div dangerouslySetInnerHTML={{ __html: speaker.biography }} />\n        <h2>Presenting</h2>\n        <p>{talks}</p>\n      </BaseStyles>\n    </Layout>\n  )\n}\n\nexport const speakerPageQuery = graphql`\n  query SpeakerPage($id: String!) {\n    speakersYaml(id: { eq: $id }) {\n      name\n      biography\n      twitter\n      localImage {\n        childImageSharp {\n          gatsbyImageData(\n            height: 300\n            width: 300\n            transformOptions: { fit: CONTAIN }\n          )\n        }\n      }\n      talks {\n        title\n        slug\n      }\n    }\n  }\n`\n"],"sourceRoot":""}