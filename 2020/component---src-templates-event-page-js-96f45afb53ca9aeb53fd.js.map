{"version":3,"sources":["webpack:///./src/templates/event-page.js"],"names":["EventPageTemplate","title","content","contentComponent","seoTitle","pageKey","PageContent","Content","linkProps","color","weight","as","direction","pad","background","justify","wrap","margin","bottom","style","borderRadius","key","href","text","map","item","to","className","EventPage","post","data","markdownRemark","pageTitle","frontmatter","HTMLContent","html","eventPageQuery"],"mappings":"2FAAA,qNAQaA,EAAoB,SAAC,GAM3B,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,iBACAC,EAEI,EAFJA,SACAC,EACI,EADJA,QAEMC,EAAcH,GAAoBI,IAwBlCC,EAAY,CAChBC,MAAO,UACPC,OAAQ,QAGV,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKT,MAAOG,GAAYH,IACxB,kBAAC,IAAD,CACEU,GAAG,MACHC,UAAU,MACVC,IAAI,SACJC,WAAW,iBACXC,QAAQ,SACRC,KAAK,OACLC,OAAQ,CAAEC,OAAQ,UAClBC,MAAO,CAAEC,aAAc,QAtCN,CACrB,CACEC,IAAK,KACLC,KAAM,mBACNC,KAAM,mBAER,CACEF,IAAK,MACLC,KAAM,mBACNC,KAAM,sBAER,CACED,KAAM,gBACNC,KAAM,iBAER,CACED,KAAM,kBACNC,KAAM,oBAuBYC,KAAI,SAAAC,GAAI,OACtBA,EAAKJ,MAAQhB,EACX,qCAEA,kBAAC,IAASG,EACR,kBAAC,IAAD,CAAMa,IAAKI,EAAKJ,IAAKK,GAAID,EAAKH,KAAML,OAAO,SACxCQ,EAAKF,WAMhB,kBAAC,IAAD,KAAUtB,GACV,kBAACK,EAAD,CAAaqB,UAAU,UAAUzB,QAASA,MAiCjC0B,UApBG,SAAC,GAAc,IACPC,EADM,EAAXC,KACXC,eACFC,EAAS,GAAMH,EAAKI,YAAYhC,MACtC,OACE,kBAAC,IAAD,KACE,kBAACD,EAAD,CACEG,iBAAkB+B,IAClBjC,MAAO4B,EAAKI,YAAYhC,MACxBC,QAAS2B,EAAKM,KACd/B,SAAU4B,EACV3B,QAASwB,EAAKI,YAAY5B,YAY3B,IAAM+B,EAAc","file":"component---src-templates-event-page-js-96f45afb53ca9aeb53fd.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, Link } from 'gatsby';\nimport { Box, Heading, Text } from 'grommet';\nimport Layout from '../components/layout/layout';\nimport Content, { HTMLContent } from '../components/content/content';\nimport SEO from '../components/seo/seo';\n\nexport const EventPageTemplate = ({\n  title,\n  content,\n  contentComponent,\n  seoTitle,\n  pageKey,\n}) => {\n  const PageContent = contentComponent || Content;\n\n  const secondaryLinks = [\n    {\n      key: 'ov',\n      href: '/events/overview',\n      text: 'Events Overview',\n    },\n    {\n      key: 'sch',\n      href: '/events/schedule',\n      text: 'Schedule of Events',\n    },\n    {\n      href: '/events/talks',\n      text: 'List of Talks',\n    },\n    {\n      href: '/events/sprints',\n      text: 'List of Sprints',\n    },\n  ];\n\n  // this is to force grommet's styles on to gatsby's links\n  const linkProps = {\n    color: 'control',\n    weight: 'bold',\n  };\n\n  return (\n    <Box>\n      <SEO title={seoTitle || title} />\n      <Box\n        as=\"nav\"\n        direction=\"row\"\n        pad=\"medium\"\n        background=\"backgroundBack\"\n        justify=\"around\"\n        wrap=\"true\"\n        margin={{ bottom: 'xsmall' }}\n        style={{ borderRadius: '5px' }}\n      >\n        {secondaryLinks.map(item =>\n          item.key === pageKey ? (\n            <></>\n          ) : (\n            <Text {...linkProps}>\n              <Link key={item.key} to={item.href} margin=\"small\">\n                {item.text}\n              </Link>\n            </Text>\n          )\n        )}\n      </Box>\n      <Heading>{title}</Heading>\n      <PageContent className=\"content\" content={content} />\n    </Box>\n  );\n};\n\nEventPageTemplate.propTypes = {\n  title: PropTypes.string.isRequired,\n  content: PropTypes.string,\n  contentComponent: PropTypes.func,\n  seoTitle: PropTypes.string,\n  pageKey: PropTypes.string,\n};\n\nconst EventPage = ({ data }) => {\n  const { markdownRemark: post } = data;\n  const pageTitle = `${post.frontmatter.title}`;\n  return (\n    <Layout>\n      <EventPageTemplate\n        contentComponent={HTMLContent}\n        title={post.frontmatter.title}\n        content={post.html}\n        seoTitle={pageTitle}\n        pageKey={post.frontmatter.pageKey}\n      />\n    </Layout>\n  );\n};\n\nEventPage.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default EventPage;\n\nexport const eventPageQuery = graphql`\n  query EventPage($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      html\n      frontmatter {\n        title\n        pageKey\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}