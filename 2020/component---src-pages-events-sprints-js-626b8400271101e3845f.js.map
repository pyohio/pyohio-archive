{"version":3,"sources":["webpack:///./src/pages/events/sprints.js"],"names":["SponsorsPage","render","sprintList","this","props","data","allSprintsYaml","edges","name","content","property","to","map","sprint","node","key","id","organizers","join","when","href","project_url","getting_started_url","dangerouslySetInnerHTML","__html","description","objectives","React","Component","pageQuery"],"mappings":"wQAKqBA,E,gLACnBC,OAAA,WAAU,IAEOC,EADEC,KAAKC,MAAdC,KAC2BC,eAA3BC,MAGR,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,+BALY,WAMZ,0BAAMC,KAAK,gBAAgBC,QANf,YAOZ,0BAAMC,SAAS,WAAWD,QAPd,aASd,4BATc,WAUd,yFAC8D,IAC5D,kBAAC,IAAD,CAAME,GAAE,4BAAR,6BAEDT,EAAWU,KAAI,gBAASC,EAAT,EAAGC,KAAH,OACd,yBAAKC,IAAKF,EAAOG,IACf,4BAAKH,EAAOL,MACZ,4CAAkBK,EAAOI,WAAWC,KAAK,OACzC,qCAAWL,EAAOM,MAClB,mCACO,uBAAGC,KAAMP,EAAOQ,aAAcR,EAAOQ,aAD5C,KAEE,uBAAGD,KAAMP,EAAOS,qBAAhB,mBAFF,KAIA,uBAAGC,wBAAyB,CAAEC,OAAQX,EAAOY,eAC7C,uBAAGF,wBAAyB,CAAEC,OAAQX,EAAOa,oB,GA5BfC,IAAMC,WAoCnCC,EAAS","file":"component---src-pages-events-sprints-js-626b8400271101e3845f.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Helmet from 'react-helmet';\nimport Layout from '../../components/layout/layout';\n\nexport default class SponsorsPage extends React.Component {\n  render() {\n    const { data } = this.props;\n    const { edges: sprintList } = data.allSprintsYaml;\n    const pageTitle = 'Sprints';\n\n    return (\n      <Layout>\n        <Helmet>\n          <title>{pageTitle}</title>\n          <meta name=\"twitter:title\" content={pageTitle} />\n          <meta property=\"og:title\" content={pageTitle} />\n        </Helmet>\n        <h1>{pageTitle}</h1>\n        <p>\n          For more information on sprints or to submit your own, see:{' '}\n          <Link to={`/events/overview#sprints`}>Events Overview: Sprints</Link>\n        </p>\n        {sprintList.map(({ node: sprint }) => (\n          <div key={sprint.id}>\n            <h2>{sprint.name}</h2>\n            <p>Organized by: {sprint.organizers.join(', ')}</p>\n            <p>Times: {sprint.when}</p>\n            <p>\n              URL: <a href={sprint.project_url}>{sprint.project_url}</a> (\n              <a href={sprint.getting_started_url}>getting started</a>)\n            </p>\n            <p dangerouslySetInnerHTML={{ __html: sprint.description }}></p>\n            <p dangerouslySetInnerHTML={{ __html: sprint.objectives }}></p>\n          </div>\n        ))}\n      </Layout>\n    );\n  }\n}\n\nexport const pageQuery = graphql`\n  query SprintsListQuery {\n    allSprintsYaml(sort: { fields: [name] }) {\n      edges {\n        node {\n          name\n          objectives\n          organizers\n          when\n          getting_started_url\n          description\n          project_url\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}