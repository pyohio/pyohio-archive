{"version":3,"sources":["webpack:///./src/templates/talk-page.js"],"names":["TalkPageTemplate","title","content","contentComponent","seoTitle","PageContent","Content","className","TalkPage","talk","data","talksYaml","pageTitle","speakerList","speakers","map","speaker","key","name","biography","pageContent","type","description","HTMLContent","talkPageQuery"],"mappings":"iSAQaA,EAAmB,SAAC,GAK1B,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,iBACAC,EACI,EADJA,SAEMC,EAAcF,GAAoBG,IAExC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKL,MAAOG,GAAYH,IACxB,kBAAC,IAAD,KAAUA,GACV,kBAACI,EAAD,CAAaE,UAAU,UAAUL,QAASA,MA8CjCM,UAlCE,SAAC,GAAc,IACXC,EADU,EAAXC,KACVC,UACFC,EAAS,GAAMH,EAAKR,MACpBY,EAAcJ,EAAKK,SAASC,KAAI,SAACC,EAASC,GAAV,aAC7BD,EAAQE,KADqB,iBAE/BF,EAAQG,UAFuB,UAKhCC,EAAW,uBAEVX,EAAKY,KAFK,cAGXZ,EAAKa,YAHM,yCAKRT,EALQ,2BASjB,OACE,kBAAC,IAAD,KACE,kBAACb,EAAD,CACEG,iBAAkBoB,IAClBtB,MAAOQ,EAAKR,MACZC,QAASkB,EACThB,SAAUQ,EACVE,SAAUL,EAAKK,aAYhB,IAAMU,EAAa","file":"component---src-templates-talk-page-js-f81e12fcd7c4b6a2deb8.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport { Box, Heading } from 'grommet';\nimport Layout from '../components/layout/layout';\nimport Content, { HTMLContent } from '../components/content/content';\nimport SEO from '../components/seo/seo';\n\nexport const TalkPageTemplate = ({\n  title,\n  content,\n  contentComponent,\n  seoTitle,\n}) => {\n  const PageContent = contentComponent || Content\n\n  return (\n    <Box>\n      <SEO title={seoTitle || title} />\n      <Heading>{title}</Heading>\n      <PageContent className=\"content\" content={content} />\n    </Box>\n  );\n};\n\nTalkPageTemplate.propTypes = {\n  title: PropTypes.string.isRequired,\n  content: PropTypes.string,\n  contentComponent: PropTypes.func,\n  seoTitle: PropTypes.string,\n};\n\nconst TalkPage = ({ data }) => {\n  const { talksYaml: talk } = data;\n  const pageTitle = `${talk.title}`;\n  const speakerList = talk.speakers.map((speaker, key) =>\n    `<h3>${speaker.name}</h3>\n    <p>${speaker.biography}</p>`\n  )\n\n  const pageContent = `\n    <div>\n    <p>${talk.type}<p>\n      ${talk.description}\n    <h2>Presented by</h2>\n    <div>${speakerList}</div>\n    </div>\n\n  `\n  return (\n    <Layout>\n      <TalkPageTemplate\n        contentComponent={HTMLContent}\n        title={talk.title}\n        content={pageContent}\n        seoTitle={pageTitle}\n        speakers={talk.speakers}\n      />\n    </Layout>\n  );\n};\n\nTalkPage.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default TalkPage;\n\nexport const talkPageQuery = graphql`\n  query TalkPage($id: String!) {\n    talksYaml(id: {eq: $id}) {\n      title\n      description\n      type\n      speakers {\n        name\n        biography\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}