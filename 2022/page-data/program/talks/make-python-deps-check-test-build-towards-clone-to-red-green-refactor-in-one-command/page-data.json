{"componentChunkName":"component---src-templates-talk-page-js","path":"/program/talks/make-python-deps-check-test-build-towards-clone-to-red-green-refactor-in-one-command","result":{"data":{"talksYaml":{"title":"make python deps check test build: Towards Clone to Red-Green-Refactor in One Command","description":"<p>Getting productive with a Python codebase, especially when you're unfamiliar with the ecosystem, can be daunting. Building a cohesive strategy with widely-available tooling shortens the time-to-productivity for new contributors to projects internal and open-source, demonstrating that the maintainers care about onboarding and the developer experience. I'll give an introduction to how my team solved this problem using a 46-year-old program and push the audience in a direction toward better developer experiences starting at the greatest common denominator of tooling.</p>","type":"Short Talk","start_time":"TBD","speakers":[{"name":"Colin Dean","slug":"colin-dean"}]}},"pageContext":{"id":"45c34a22-840e-5947-bb2d-64e1474a8ac8"}},"staticQueryHashes":["2197803311","2744905544","3465997491","479044330","512359922"]}