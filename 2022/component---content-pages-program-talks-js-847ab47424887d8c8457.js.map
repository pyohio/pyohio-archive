{"version":3,"sources":["webpack://pyohio-static-website/./content/pages/program/talks.js"],"names":["TalksPage","render","talkList","this","props","data","allTalksYaml","edges","title","sx","backgroundColor","as","Link","to","map","talk","node","key","id","fontSize","lineHeight","pt","slug","color","speakers","s","name","reduce","prev","curr","React"],"mappings":"wPAOqBA,E,6FACnBC,OAAA,WACE,IACeC,EADEC,KAAKC,MAAdC,KACyBC,aAAzBC,MAER,OACE,QAAC,KAAD,MACE,QAAC,KAAD,CAAKC,MAAM,uBACX,QAAC,QAAD,eACA,QAAC,KAAD,CAASC,GAAI,CAAEC,gBAAiB,UAAhC,mBACmB,KACjB,QAAC,OAAD,CAAUC,GAAIC,OAAMC,GAAE,qBAAtB,yBAKDX,EAASY,KAAI,gBAASC,EAAT,EAAGC,KAAH,OACZ,eAAKC,IAAKF,EAAKG,KACb,QAAC,OAAD,CACEP,GAAG,KACHF,GAAI,CACFU,SAAU,EACVC,WAAY,KACZC,GAAG,UAGL,QAAC,OAAD,CACEV,GAAIC,OACJC,GAAE,kBAAoBE,EAAKO,KAC3Bb,GAAI,CAAEc,MAAO,cAEZR,EAAKP,SAGV,QAAC,OAAD,CACEC,GAAI,CACFU,SAAU,EACVC,WAAY,IAHhB,KAMK,IACFL,EAAKS,SACHV,KAAI,SAACW,GAAD,OACH,QAAC,OAAD,CAAUd,GAAIC,OAAMC,GAAE,qBAAuBY,EAAEH,MAC5CG,EAAEC,SAGNC,QAAO,SAACC,EAAMC,GAAP,MAAgB,CAACD,EAAM,KAAMC,a,GA/CdC","file":"component---content-pages-program-talks-js-847ab47424887d8c8457.js","sourcesContent":["/** @jsx jsx */\n\nimport { Layout, Seo } from \"gatsby-theme-catalyst-core\"\nimport React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { jsx, Message, Themed } from \"theme-ui\"\n\nexport default class TalksPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const { edges: talkList } = data.allTalksYaml\n\n    return (\n      <Layout>\n        <Seo title=\"PyOhio 2022 Talks\" />\n        <Themed.h1>Talks</Themed.h1>\n        <Message sx={{ backgroundColor: \"muted\" }}>\n          Schedule posted:{\" \"}\n          <Themed.a as={Link} to={`/program/schedule`}>\n            PyOhio 2022 Schedule\n          </Themed.a>\n        </Message>\n\n        {talkList.map(({ node: talk }) => (\n          <div key={talk.id}>\n            <Themed.p\n              as=\"h2\"\n              sx={{\n                fontSize: 3,\n                lineHeight: 1.25,\n                pt: `20px`,\n              }}\n            >\n              <Themed.a\n                as={Link}\n                to={`/program/talks/${talk.slug}`}\n                sx={{ color: \"highlight\" }}\n              >\n                {talk.title}\n              </Themed.a>\n            </Themed.p>\n            <Themed.p\n              sx={{\n                fontSize: 1,\n                lineHeight: 1,\n              }}\n            >\n              by{\" \"}\n              {talk.speakers\n                .map((s) => (\n                  <Themed.a as={Link} to={`/program/speakers/${s.slug}`}>\n                    {s.name}\n                  </Themed.a>\n                ))\n                .reduce((prev, curr) => [prev, \", \", curr])}\n            </Themed.p>\n          </div>\n        ))}\n      </Layout>\n    )\n  }\n}\n\nexport const pageQuery = graphql`\n  query TalksListQuery {\n    allTalksYaml(sort: { fields: [title] }, filter: { type: { ne: \"Break\" } }) {\n      edges {\n        node {\n          title\n          slug\n          speakers {\n            name\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}