{"version":3,"sources":["webpack://pyohio-static-website/./src/templates/talk-page.js"],"names":["TalkPage","timeString","talkTime","talk","data","talksYaml","speakers","map","s","as","Link","to","slug","name","reduce","prev","curr","title","type","start_time","DateTime","isNaN","setZone","toFormat","dangerouslySetInnerHTML","__html","description"],"mappings":"oOAOe,SAASA,EAAT,GAA6B,IAUtBC,EACZC,EAVFC,EADmC,EAARC,KACfC,UACZC,EAAWH,EAAKG,SACnBC,KAAI,SAACC,GAAD,OACH,QAAC,OAAD,CAAUC,GAAIC,OAAMC,GAAE,qBAAuBH,EAAEI,MAC5CJ,EAAEK,SAGNC,QAAO,SAACC,EAAMC,GAAP,MAAgB,CAACD,EAAM,KAAMC,MAYvC,OACE,QAAC,KAAD,MACE,QAAC,KAAD,CAAKC,MAAK,qBAAuBd,EAAKc,SACtC,QAAC,KAAD,MACE,kBAAKd,EAAKc,QACV,kBACE,kBACGd,EAAKe,KADR,QAhBYjB,EAiBiBE,EAAKgB,WAhBlCjB,EAAWkB,aAAiBnB,GAC9BoB,MAAMnB,GACD,MAEAA,EACJoB,QAAQ,oBACRC,SAAS,UASR,UAuBF,eAAKC,wBAAyB,CAAEC,OAAQtB,EAAKuB,eAC9B,UAAdvB,EAAKe,OACJ,oBACE,mCACA,iBAAIZ,KAGR","file":"component---src-templates-talk-page-js-680d46f6492544cfecfd.js","sourcesContent":["/** @jsx jsx */\n\nimport { Layout, Seo } from \"gatsby-theme-catalyst-core\"\nimport { graphql, Link } from \"gatsby\"\nimport { jsx, BaseStyles, Themed } from \"theme-ui\"\nimport { DateTime } from \"luxon\"\n\nexport default function TalkPage({ data }) {\n  const talk = data.talksYaml\n  const speakers = talk.speakers\n    .map((s) => (\n      <Themed.a as={Link} to={`/program/speakers/${s.slug}`}>\n        {s.name}\n      </Themed.a>\n    ))\n    .reduce((prev, curr) => [prev, \", \", curr])\n\n  function formatTime(timeString) {\n    const talkTime = DateTime.fromISO(timeString)\n    if (isNaN(talkTime)) {\n      return \"TBD\"\n    } else {\n      return talkTime\n        .setZone(\"America/New_York\")\n        .toFormat(\"h:mma\")\n    }\n  }\n  return (\n    <Layout>\n      <Seo title={`PyOhio 2022 Talk: ${talk.title}`} />\n      <BaseStyles>\n        <h1>{talk.title}</h1>\n        <p>\n          <em>\n            {talk.type} at {formatTime(talk.start_time)} EDT\n          </em>\n        </p>\n        {/* {talk.content_warnings && (\n          <p>\n            <span role=\"img\">⚠</span>️ {talk.content_warnings}\n          </p>\n        )} */}\n        {/* {talk.youtube_url && (\n          <iframe\n            title=\"Talk Video\"\n            width=\"560\"\n            height=\"315\"\n            src={talk.youtube_url.replace(\n              \"https://youtu.be/\",\n              \"https://www.youtube.com/embed/\"\n            )}\n            frameborder=\"1\"\n            allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n            allowfullscreen\n          ></iframe>\n        )} */}\n        <div dangerouslySetInnerHTML={{ __html: talk.description }} />\n        {talk.type !== \"Break\" && (\n          <div>\n            <h2>Presented by</h2>\n            <p>{speakers}</p>\n          </div>\n        )}\n        <div></div>\n      </BaseStyles>\n    </Layout>\n  )\n}\n\nexport const talkPageQuery = graphql`\n  query TalkPage($id: String!) {\n    talksYaml(id: { eq: $id }) {\n      title\n      description\n      type\n      start_time\n      # youtube_url\n      # content_warnings\n      speakers {\n        name\n        slug\n      }\n    }\n  }\n`\n"],"sourceRoot":""}